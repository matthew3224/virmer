{"version":3,"sources":["main.js"],"names":["HystModal","constructor","props","this","config","Object","assign","backscroll","linkAttributeName","closeOnOverlay","closeOnEsc","closeOnButton","waitTransitions","catchFocus","fixedSelectors","beforeOpen","afterClose","init","_closeAfterTransition","bind","isOpened","openedWindow","starter","_nextWindows","_scrollPosition","_reopenTrigger","_overlayChecker","_isMoved","_focusElements","_modalBlock","existingShadow","document","querySelector","shadow","createElement","classList","add","body","appendChild","eventsFeeler","addEventListener","e","clickedlink","target","closest","concat","preventDefault","targetSelector","getAttribute","open","close","Element","contains","window","which","focusCatcher","selector","_bodyScrollControl","setAttribute","focusControl","console","log","remove","removeEventListener","scrollTop","nodes","querySelectorAll","focus","length","nodesArray","Array","prototype","slice","call","activeElement","focusedItemIndex","indexOf","shiftKey","fixedSelectorsElems","html","documentElement","style","marginRight","forEach","el","scrollTo","top","pageYOffset","marginSize","innerWidth","clientWidth","parseInt","getComputedStyle","myModal","modal","videoframe","contentWindow","postMessage","Swiper","slidesPerView","spaceBetween","breakpoints","skeletonThumbs","allowTouchMove","freeMode","watchSlidesProgress","skeletonGallery","effect","fadeEffect","crossFade","thumbs","swiper","findElements","object","element","instance","nextElementSibling","hideElement","height","isActive","showElement","changeElementStatus","measureHeight","firstElementChild","clientHeight","subscribe","event","accordion","elements"],"mappings":"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","file":"all.min.js","sourcesContent":["/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-underscore-dangle */\r\n\r\nclass HystModal {\r\n    constructor(props) {\r\n        const defaultConfig = {\r\n            backscroll: true,\r\n            linkAttributeName: 'data-modal',\r\n            closeOnOverlay: true,\r\n            closeOnEsc: true,\r\n            closeOnButton: true,\r\n            waitTransitions: false,\r\n            catchFocus: true,\r\n            fixedSelectors: '*[data-hystfixed]',\r\n            beforeOpen: () => {\r\n            },\r\n            afterClose: () => {\r\n            },\r\n        };\r\n        this.config = Object.assign(defaultConfig, props);\r\n        if (this.config.linkAttributeName) {\r\n            this.init();\r\n        }\r\n        this._closeAfterTransition = this._closeAfterTransition.bind(this);\r\n    }\r\n\r\n    init() {\r\n        this.isOpened = false;\r\n        this.openedWindow = false;\r\n        this.starter = false;\r\n        this._nextWindows = false;\r\n        this._scrollPosition = 0;\r\n        this._reopenTrigger = false;\r\n        this._overlayChecker = false;\r\n        this._isMoved = false;\r\n        this._focusElements = [\r\n            'a[href]',\r\n            'area[href]',\r\n            'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\r\n            'select:not([disabled]):not([aria-hidden])',\r\n            'textarea:not([disabled]):not([aria-hidden])',\r\n            'button:not([disabled]):not([aria-hidden])',\r\n            'iframe',\r\n            'object',\r\n            'embed',\r\n            '[contenteditable]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n        ];\r\n        this._modalBlock = false;\r\n\r\n        const existingShadow = document.querySelector('.hystmodal__shadow');\r\n        if (existingShadow) {\r\n            this.shadow = existingShadow;\r\n        } else {\r\n            this.shadow = document.createElement('div');\r\n            this.shadow.classList.add('modal__shadow');\r\n            document.body.appendChild(this.shadow);\r\n        }\r\n        this.eventsFeeler();\r\n    }\r\n\r\n    eventsFeeler() {\r\n        document.addEventListener('click', (e) => {\r\n            const clickedlink = e.target.closest(`[${this.config.linkAttributeName}]`);\r\n            if (!this._isMoved && clickedlink) {\r\n                e.preventDefault();\r\n                this.starter = clickedlink;\r\n                const targetSelector = this.starter.getAttribute(this.config.linkAttributeName);\r\n                this._nextWindows = document.querySelector(targetSelector);\r\n                this.open();\r\n                return;\r\n            }\r\n            if (this.config.closeOnButton && e.target.closest('[data-modalClose]')) {\r\n                this.close();\r\n            }\r\n        });\r\n\r\n        if (this.config.closeOnOverlay) {\r\n            document.addEventListener('mousedown', (e) => {\r\n                if (!this._isMoved && (e.target instanceof Element) && !e.target.classList.contains('modal__wrap')) return;\r\n                this._overlayChecker = true;\r\n            });\r\n\r\n            document.addEventListener('mouseup', (e) => {\r\n                if (!this._isMoved && (e.target instanceof Element) && this._overlayChecker && e.target.classList.contains('modal__wrap')) {\r\n                    e.preventDefault();\r\n                    this._overlayChecker = !this._overlayChecker;\r\n                    this.close();\r\n                    return;\r\n                }\r\n                this._overlayChecker = false;\r\n            });\r\n        }\r\n\r\n        window.addEventListener('keydown', (e) => {\r\n            if (!this._isMoved && this.config.closeOnEsc && e.which === 27 && this.isOpened) {\r\n                e.preventDefault();\r\n                this.close();\r\n                return;\r\n            }\r\n            if (!this._isMoved && this.config.catchFocus && e.which === 9 && this.isOpened) {\r\n                this.focusCatcher(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    open(selector) {\r\n        if (selector) {\r\n            if (typeof (selector) === 'string') {\r\n                this._nextWindows = document.querySelector(selector);\r\n            } else {\r\n                this._nextWindows = selector;\r\n            }\r\n        }\r\n        if (!this._nextWindows) {\r\n            console.log('Warning: hystModal selector is not found');\r\n            return;\r\n        }\r\n        if (this.isOpened) {\r\n            this._reopenTrigger = true;\r\n            this.close();\r\n            return;\r\n        }\r\n        this.openedWindow = this._nextWindows;\r\n        this._modalBlock = this.openedWindow.querySelector('.hystmodal__window');\r\n        this.config.beforeOpen(this);\r\n        this._bodyScrollControl();\r\n        this.shadow.classList.add('modal__shadow--show');\r\n        this.openedWindow.classList.add('modal--active');\r\n        this.openedWindow.setAttribute('aria-hidden', 'false');\r\n        if (this.config.catchFocus) this.focusControl();\r\n        this.isOpened = true;\r\n    }\r\n\r\n    close() {\r\n        if (!this.isOpened) {\r\n            return;\r\n        }\r\n        if (this.config.waitTransitions) {\r\n            this.openedWindow.classList.add('modal--moved');\r\n            this._isMoved = true;\r\n            this.openedWindow.addEventListener('transitionend', this._closeAfterTransition);\r\n            this.openedWindow.classList.remove('modal--active');\r\n        } else {\r\n            this.openedWindow.classList.remove('modal--active');\r\n            this._closeAfterTransition();\r\n        }\r\n    }\r\n\r\n    _closeAfterTransition() {\r\n        this.openedWindow.classList.remove('modal--moved');\r\n        this.openedWindow.removeEventListener('transitionend', this._closeAfterTransition);\r\n        this._isMoved = false;\r\n        this.shadow.classList.remove('modal__shadow--show');\r\n        this.openedWindow.setAttribute('aria-hidden', 'true');\r\n\r\n        if (this.config.catchFocus) this.focusControl();\r\n        this._bodyScrollControl();\r\n        this.isOpened = false;\r\n        this.openedWindow.scrollTop = 0;\r\n        this.config.afterClose(this);\r\n\r\n        if (this._reopenTrigger) {\r\n            this._reopenTrigger = false;\r\n            this.open();\r\n        }\r\n    }\r\n\r\n    focusControl() {\r\n        const nodes = this.openedWindow.querySelectorAll(this._focusElements);\r\n        if (this.isOpened && this.starter) {\r\n            this.starter.focus();\r\n        } else if (nodes.length) nodes[0].focus();\r\n    }\r\n\r\n    focusCatcher(e) {\r\n        const nodes = this.openedWindow.querySelectorAll(this._focusElements);\r\n        const nodesArray = Array.prototype.slice.call(nodes);\r\n        if (!this.openedWindow.contains(document.activeElement)) {\r\n            nodesArray[0].focus();\r\n            e.preventDefault();\r\n        } else {\r\n            const focusedItemIndex = nodesArray.indexOf(document.activeElement);\r\n            if (e.shiftKey && focusedItemIndex === 0) {\r\n                nodesArray[nodesArray.length - 1].focus();\r\n                e.preventDefault();\r\n            }\r\n            if (!e.shiftKey && focusedItemIndex === nodesArray.length - 1) {\r\n                nodesArray[0].focus();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    _bodyScrollControl() {\r\n        if (!this.config.backscroll) return;\r\n\r\n        // collect fixed selectors to array\r\n        const fixedSelectorsElems = document.querySelectorAll(this.config.fixedSelectors);\r\n        const fixedSelectors = Array.prototype.slice.call(fixedSelectorsElems);\r\n\r\n        const html = document.documentElement;\r\n        if (this.isOpened === true) {\r\n            html.classList.remove('modal__opened');\r\n            html.style.marginRight = '';\r\n            fixedSelectors.forEach((el) => {\r\n                el.style.marginRight = '';\r\n            });\r\n            window.scrollTo(0, this._scrollPosition);\r\n            html.style.top = '';\r\n            return;\r\n        }\r\n        this._scrollPosition = window.pageYOffset;\r\n        const marginSize = window.innerWidth - html.clientWidth;\r\n        html.style.top = `${-this._scrollPosition}px`;\r\n\r\n        if (marginSize) {\r\n            html.style.marginRight = `${marginSize}px`;\r\n            fixedSelectors.forEach((el) => {\r\n                el.style.marginRight = `${parseInt(getComputedStyle(el).marginRight, 10) + marginSize}px`;\r\n            });\r\n        }\r\n        html.classList.add('modal__opened');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst myModal = new HystModal({\r\n    // for dynamic init() of modals\r\n    // linkAttributeName: false,\r\n    closeOnEsc: true,\r\n    backscroll: true,\r\n    beforeOpen: function (modal) {\r\n        console.log('Message before opening the modal');\r\n        console.log(modal); //modal window object\r\n    },\r\n    afterClose: function (modal) {\r\n        console.log('Message after modal has closed');\r\n        console.log(modal); //modal window object\r\n\r\n        //If Youtube video inside Modal, close it on modal closing\r\n        let videoframe = modal.openedWindow.querySelector('iframe');\r\n        if (videoframe) {\r\n            videoframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"stopVideo\",\"args\":\"\"}', '*');\r\n        }\r\n    },\r\n});\r\n\r\nif (window.innerWidth <= 1151) {\r\n    const faqSlider = new Swiper(\".js-reviews-slider\", {\r\n        slidesPerView: 4,\r\n        spaceBetween: 30,\r\n        breakpoints: {\r\n            320: {\r\n                slidesPerView: 1.2,\r\n                spaceBetween: 10,\r\n            },\r\n            380: {\r\n                slidesPerView: 1.5,\r\n                spaceBetween: 10,\r\n            },\r\n            430: {\r\n                slidesPerView: 1.7,\r\n                spaceBetween: 15,\r\n            },\r\n            455: {\r\n                slidesPerView: 1.9,\r\n                spaceBetween: 15,\r\n            },\r\n            530: {\r\n                slidesPerView: 2,\r\n                spaceBetween: 15,\r\n            },\r\n            745: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 20\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst skeletonThumbs = new Swiper(\".js-skeleton-thumbs\", {\r\n    spaceBetween: 10,\r\n    slidesPerView: 3,\r\n    allowTouchMove: false,\r\n    freeMode: true,\r\n    watchSlidesProgress: true,\r\n});\r\nconst skeletonGallery = new Swiper(\".js-skeleton-gallery\", {\r\n    spaceBetween: 10,\r\n    effect: 'fade',\r\n    fadeEffect: {\r\n        crossFade: true\r\n    },\r\n    allowTouchMove: false,\r\n    thumbs: {\r\n        swiper: skeletonThumbs,\r\n    },\r\n});\r\n\r\nfunction findElements(object, element) {\r\n    const instance = object;\r\n    instance.element = element;\r\n    instance.target = element.nextElementSibling;\r\n}\r\n\r\nfunction hideElement(object) {\r\n    const instance = object;\r\n    const {target} = instance;\r\n    instance.element.classList.remove('faq__question--active');\r\n    target.style.height = null;\r\n    instance.isActive = false;\r\n}\r\n\r\nfunction showElement(object) {\r\n    const instance = object;\r\n    const {target, height} = instance;\r\n    instance.element.classList.add('faq__question--active');\r\n    target.style.height = `${height}px`;\r\n    instance.isActive = true;\r\n}\r\n\r\nfunction changeElementStatus(instance) {\r\n    if (instance.isActive) {\r\n        hideElement(instance);\r\n    } else {\r\n        showElement(instance);\r\n    }\r\n}\r\n\r\nfunction measureHeight(object) {\r\n    const instance = object;\r\n    instance.height = object.target.firstElementChild.clientHeight;\r\n}\r\n\r\nfunction subscribe(instance) {\r\n    instance.element.addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        changeElementStatus(instance);\r\n    });\r\n    window.addEventListener('resize', () => measureHeight(instance));\r\n}\r\n\r\nfunction accordion(element) {\r\n    const instance = {};\r\n\r\n    function init() {\r\n        findElements(instance, element);\r\n        measureHeight(instance);\r\n        subscribe(instance);\r\n    }\r\n\r\n    init();\r\n}\r\n\r\nconst elements = [...document.querySelectorAll('.js-accordion-faq')];\r\nif (elements) {\r\n    elements.forEach(accordion);\r\n}"]}